class FAILED_TESTS_MCDC_R0

inherit
	EQA_TEST_SET

feature -- Tests from failed proofs 

	test_QS_STACK
		do
				test_QS_STACK_make_1
				test_QS_STACK_get_top_1
				test_QS_STACK_is_empty_1
				test_QS_STACK_is_full_1
				test_QS_STACK_push_1
				test_QS_STACK_push_2
				test_QS_STACK_pop_1
				test_QS_STACK_pop_2
				test_QS_STACK_peek_1
				test_QS_STACK_peek_2
				test_QS_STACK_get_elem_1
				test_QS_STACK_search_1
				test_QS_STACK_search_2
				test_QS_STACK_is_contain_1
				test_QS_STACK_is_contain_2
				test_QS_STACK_size_1
		end

	test_QS_STACK_make_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 75)
			bn := -2147457742
			current_object.make (bn)
		end

	test_QS_STACK_get_top_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			get_top_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 85)
			bn := -2147481202
			get_top_result := current_object.get_top (bn)
		end

	test_QS_STACK_is_empty_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			is_empty_result: BOOLEAN
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 29)
			bn := -2147481408
			is_empty_result := current_object.is_empty (bn)
		end

	test_QS_STACK_is_full_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			is_full_result: BOOLEAN
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 47)
			bn := -2147451363
			is_full_result := current_object.is_full (bn)
		end

	test_QS_STACK_push_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			x: INTEGER_32
			bn: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 65)
			x := -2147458457
			bn := 1
			current_object.push (x, bn)
		end

	test_QS_STACK_push_2
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			x: INTEGER_32
			bn: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 100)
			x := -2147458457
			bn := 2
			current_object.push (x, bn)
		end

	test_QS_STACK_pop_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			pop_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 98)
			bn := 3
			pop_result := current_object.pop (bn)
		end

	test_QS_STACK_pop_2
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			pop_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 0)
			bn := 4
			pop_result := current_object.pop (bn)
		end

	test_QS_STACK_peek_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			peek_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 30)
			bn := 5
			peek_result := current_object.peek (bn)
		end

	test_QS_STACK_peek_2
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			peek_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 0)
			bn := 6
			peek_result := current_object.peek (bn)
		end

	test_QS_STACK_get_elem_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			i: INTEGER_32
			bn: INTEGER_32
			get_elem_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 54)
			i := 54
			bn := -2147455548
			get_elem_result := current_object.get_elem (i, bn)
		end

	test_QS_STACK_search_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			key: INTEGER_32
			bn: INTEGER_32
			search_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (-2147466623, 4)
			current_object_arr.force (-2147466623, 5)
			current_object_arr.force (-2147466623, 6)
			current_object_arr.force (-2147466623, 7)
			current_object_arr.force (-2147466623, 8)
			current_object_arr.force (-2147466623, 9)
			current_object_arr.force (-2147466623, 10)
			current_object_arr.force (-2147466623, 11)
			current_object_arr.force (-2147466623, 12)
			current_object_arr.force (-2147466623, 13)
			current_object_arr.force (-2147466623, 14)
			current_object_arr.force (-2147466623, 15)
			current_object_arr.force (-2147466623, 16)
			current_object_arr.force (-2147466623, 17)
			current_object_arr.force (-2147466623, 18)
			current_object_arr.force (-2147466623, 19)
			current_object_arr.force (-2147466623, 20)
			current_object_arr.force (-2147466623, 21)
			current_object_arr.force (-2147466623, 22)
			current_object_arr.force (-2147466623, 23)
			current_object_arr.force (-2147466623, 24)
			current_object_arr.force (-2147466623, 25)
			current_object_arr.force (-2147466623, 26)
			current_object_arr.force (-2147466623, 27)
			current_object_arr.force (-2147466623, 28)
			current_object_arr.force (-2147466623, 29)
			current_object_arr.force (-2147466623, 30)
			current_object_arr.force (-2147466623, 31)
			current_object_arr.force (-2147466623, 32)
			current_object_arr.force (-2147466623, 33)
			current_object_arr.force (-2147466623, 34)
			current_object_arr.force (-2147466623, 35)
			current_object_arr.force (-2147466623, 36)
			current_object_arr.force (-2147466623, 37)
			current_object_arr.force (-2147466623, 38)
			current_object_arr.force (-2147466623, 39)
			current_object_arr.force (-2147466623, 40)
			current_object_arr.force (-2147466623, 41)
			current_object_arr.force (-2147466623, 42)
			current_object_arr.force (-2147466623, 43)
			current_object_arr.force (-2147466623, 44)
			current_object_arr.force (-2147466623, 45)
			current_object_arr.force (-2147466623, 46)
			current_object_arr.force (-2147466623, 47)
			current_object_arr.force (-2147466623, 48)
			current_object_arr.force (-2147466623, 49)
			current_object_arr.force (-2147466623, 50)
			current_object_arr.force (-2147466623, 51)
			current_object_arr.force (-2147466623, 52)
			current_object_arr.force (-2147466623, 53)
			current_object_arr.force (-2147466623, 54)
			current_object_arr.force (-2147466623, 55)
			current_object_arr.force (-2147466623, 56)
			current_object_arr.force (-2147466623, 57)
			current_object_arr.force (-2147466623, 58)
			current_object_arr.force (-2147466623, 59)
			current_object_arr.force (-2147466623, 60)
			current_object_arr.force (-2147466623, 61)
			current_object_arr.force (-2147466623, 62)
			current_object_arr.force (-2147466623, 63)
			current_object_arr.force (-2147466623, 64)
			current_object_arr.force (-2147466623, 65)
			current_object_arr.force (-2147466623, 66)
			current_object_arr.force (-2147466623, 67)
			current_object_arr.force (-2147466623, 68)
			current_object_arr.force (-2147466623, 69)
			current_object_arr.force (-2147466623, 70)
			current_object_arr.force (-2147466623, 71)
			current_object_arr.force (-2147466623, 72)
			current_object_arr.force (-2147466623, 73)
			current_object_arr.force (-2147466623, 74)
			current_object_arr.force (-2147466623, 75)
			current_object_arr.force (-2147466623, 76)
			current_object_arr.force (-2147466623, 77)
			current_object_arr.force (-2147466623, 78)
			current_object_arr.force (-2147466623, 79)
			current_object_arr.force (-2147466623, 80)
			current_object_arr.force (-2147466623, 81)
			current_object_arr.force (-2147466623, 82)
			current_object_arr.force (-2147466623, 83)
			current_object_arr.force (-2147466623, 84)
			current_object_arr.force (-2147466623, 85)
			current_object_arr.force (-2147466623, 86)
			current_object_arr.force (-2147466623, 87)
			current_object_arr.force (-2147466623, 88)
			current_object_arr.force (-2147466623, 89)
			current_object_arr.force (-2147466623, 90)
			current_object_arr.force (-2147466623, 91)
			current_object_arr.force (-2147466623, 92)
			current_object_arr.force (-2147466623, 93)
			current_object_arr.force (-2147466623, 94)
			current_object_arr.force (-2147466623, 95)
			current_object_arr.force (-2147466623, 96)
			current_object_arr.force (-2147466623, 97)
			current_object_arr.force (-2147466623, 98)
			current_object_arr.force (-2147466623, 99)
			current_object_arr.force (-2147466623, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 92)
			key := -2147466623
			bn := 7
			search_result := current_object.search (key, bn)
		end

	test_QS_STACK_search_2
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			key: INTEGER_32
			bn: INTEGER_32
			search_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (-2147466623, 1)
			current_object_arr.force (-2147466623, 2)
			current_object_arr.force (-2147466623, 3)
			current_object_arr.force (-2147466623, 4)
			current_object_arr.force (-2147466623, 5)
			current_object_arr.force (-2147466623, 6)
			current_object_arr.force (-2147466623, 7)
			current_object_arr.force (-2147466623, 8)
			current_object_arr.force (-2147466623, 9)
			current_object_arr.force (-2147466623, 10)
			current_object_arr.force (-2147466623, 11)
			current_object_arr.force (-2147466623, 12)
			current_object_arr.force (-2147466623, 13)
			current_object_arr.force (-2147466623, 14)
			current_object_arr.force (-2147466623, 15)
			current_object_arr.force (-2147466623, 16)
			current_object_arr.force (-2147466623, 17)
			current_object_arr.force (-2147466623, 18)
			current_object_arr.force (-2147466623, 19)
			current_object_arr.force (-2147466623, 20)
			current_object_arr.force (-2147466623, 21)
			current_object_arr.force (-2147466623, 22)
			current_object_arr.force (-2147466623, 23)
			current_object_arr.force (-2147466623, 24)
			current_object_arr.force (-2147466623, 25)
			current_object_arr.force (-2147466623, 26)
			current_object_arr.force (-2147466623, 27)
			current_object_arr.force (-2147466623, 28)
			current_object_arr.force (-2147466623, 29)
			current_object_arr.force (-2147466623, 30)
			current_object_arr.force (-2147466623, 31)
			current_object_arr.force (-2147466623, 32)
			current_object_arr.force (-2147466623, 33)
			current_object_arr.force (-2147466623, 34)
			current_object_arr.force (-2147466623, 35)
			current_object_arr.force (-2147466623, 36)
			current_object_arr.force (-2147466623, 37)
			current_object_arr.force (-2147466623, 38)
			current_object_arr.force (-2147466623, 39)
			current_object_arr.force (-2147466623, 40)
			current_object_arr.force (-2147466623, 41)
			current_object_arr.force (-2147466623, 42)
			current_object_arr.force (-2147466623, 43)
			current_object_arr.force (-2147466623, 44)
			current_object_arr.force (-2147466623, 45)
			current_object_arr.force (-2147466623, 46)
			current_object_arr.force (-2147466623, 47)
			current_object_arr.force (-2147466623, 48)
			current_object_arr.force (-2147466623, 49)
			current_object_arr.force (-2147466623, 50)
			current_object_arr.force (-2147466623, 51)
			current_object_arr.force (-2147466623, 52)
			current_object_arr.force (-2147466623, 53)
			current_object_arr.force (-2147466623, 54)
			current_object_arr.force (-2147466623, 55)
			current_object_arr.force (-2147466623, 56)
			current_object_arr.force (-2147466623, 57)
			current_object_arr.force (-2147466623, 58)
			current_object_arr.force (-2147466623, 59)
			current_object_arr.force (-2147466623, 60)
			current_object_arr.force (-2147466623, 61)
			current_object_arr.force (-2147466623, 62)
			current_object_arr.force (-2147466623, 63)
			current_object_arr.force (-2147466623, 64)
			current_object_arr.force (-2147466623, 65)
			current_object_arr.force (-2147466623, 66)
			current_object_arr.force (-2147466623, 67)
			current_object_arr.force (-2147466623, 68)
			current_object_arr.force (-2147466623, 69)
			current_object_arr.force (-2147466623, 70)
			current_object_arr.force (-2147466623, 71)
			current_object_arr.force (-2147466623, 72)
			current_object_arr.force (-2147466623, 73)
			current_object_arr.force (-2147466623, 74)
			current_object_arr.force (-2147466623, 75)
			current_object_arr.force (-2147466623, 76)
			current_object_arr.force (-2147466623, 77)
			current_object_arr.force (-2147466623, 78)
			current_object_arr.force (-2147466623, 79)
			current_object_arr.force (-2147466623, 80)
			current_object_arr.force (-2147466623, 81)
			current_object_arr.force (-2147466623, 82)
			current_object_arr.force (-2147466623, 83)
			current_object_arr.force (-2147466623, 84)
			current_object_arr.force (-2147466623, 85)
			current_object_arr.force (-2147466623, 86)
			current_object_arr.force (-2147466623, 87)
			current_object_arr.force (-2147466623, 88)
			current_object_arr.force (-2147466623, 89)
			current_object_arr.force (-2147466623, 90)
			current_object_arr.force (-2147466623, 91)
			current_object_arr.force (-2147466623, 92)
			current_object_arr.force (-2147466623, 93)
			current_object_arr.force (-2147466623, 94)
			current_object_arr.force (-2147466623, 95)
			current_object_arr.force (-2147466623, 96)
			current_object_arr.force (-2147466623, 97)
			current_object_arr.force (-2147466623, 98)
			current_object_arr.force (-2147466623, 99)
			current_object_arr.force (-2147466623, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 1)
			key := 30478
			bn := 8
			search_result := current_object.search (key, bn)
		end

	test_QS_STACK_is_contain_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			key: INTEGER_32
			bn: INTEGER_32
			is_contain_result: BOOLEAN
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (-2147469626, 8)
			current_object_arr.force (-2147469626, 9)
			current_object_arr.force (-2147469626, 10)
			current_object_arr.force (-2147469626, 11)
			current_object_arr.force (-2147469626, 12)
			current_object_arr.force (-2147469626, 13)
			current_object_arr.force (-2147469626, 14)
			current_object_arr.force (-2147469626, 15)
			current_object_arr.force (-2147469626, 16)
			current_object_arr.force (-2147469626, 17)
			current_object_arr.force (-2147469626, 18)
			current_object_arr.force (-2147469626, 19)
			current_object_arr.force (-2147469626, 20)
			current_object_arr.force (-2147469626, 21)
			current_object_arr.force (-2147469626, 22)
			current_object_arr.force (-2147469626, 23)
			current_object_arr.force (-2147469626, 24)
			current_object_arr.force (-2147469626, 25)
			current_object_arr.force (-2147469626, 26)
			current_object_arr.force (-2147469626, 27)
			current_object_arr.force (-2147469626, 28)
			current_object_arr.force (-2147469626, 29)
			current_object_arr.force (-2147469626, 30)
			current_object_arr.force (-2147469626, 31)
			current_object_arr.force (-2147469626, 32)
			current_object_arr.force (-2147469626, 33)
			current_object_arr.force (-2147469626, 34)
			current_object_arr.force (-2147469626, 35)
			current_object_arr.force (-2147469626, 36)
			current_object_arr.force (-2147469626, 37)
			current_object_arr.force (-2147469626, 38)
			current_object_arr.force (-2147469626, 39)
			current_object_arr.force (-2147469626, 40)
			current_object_arr.force (-2147469626, 41)
			current_object_arr.force (-2147469626, 42)
			current_object_arr.force (-2147469626, 43)
			current_object_arr.force (-2147469626, 44)
			current_object_arr.force (-2147469626, 45)
			current_object_arr.force (-2147469626, 46)
			current_object_arr.force (-2147469626, 47)
			current_object_arr.force (-2147469626, 48)
			current_object_arr.force (-2147469626, 49)
			current_object_arr.force (-2147469626, 50)
			current_object_arr.force (-2147469626, 51)
			current_object_arr.force (-2147469626, 52)
			current_object_arr.force (-2147469626, 53)
			current_object_arr.force (-2147469626, 54)
			current_object_arr.force (-2147469626, 55)
			current_object_arr.force (-2147469626, 56)
			current_object_arr.force (-2147469626, 57)
			current_object_arr.force (-2147469626, 58)
			current_object_arr.force (-2147469626, 59)
			current_object_arr.force (-2147469626, 60)
			current_object_arr.force (-2147469626, 61)
			current_object_arr.force (-2147469626, 62)
			current_object_arr.force (-2147469626, 63)
			current_object_arr.force (-2147469626, 64)
			current_object_arr.force (-2147469626, 65)
			current_object_arr.force (-2147469626, 66)
			current_object_arr.force (-2147469626, 67)
			current_object_arr.force (-2147469626, 68)
			current_object_arr.force (-2147469626, 69)
			current_object_arr.force (-2147469626, 70)
			current_object_arr.force (-2147469626, 71)
			current_object_arr.force (-2147469626, 72)
			current_object_arr.force (-2147469626, 73)
			current_object_arr.force (-2147469626, 74)
			current_object_arr.force (-2147469626, 75)
			current_object_arr.force (-2147469626, 76)
			current_object_arr.force (-2147469626, 77)
			current_object_arr.force (-2147469626, 78)
			current_object_arr.force (-2147469626, 79)
			current_object_arr.force (-2147469626, 80)
			current_object_arr.force (-2147469626, 81)
			current_object_arr.force (-2147469626, 82)
			current_object_arr.force (-2147469626, 83)
			current_object_arr.force (-2147469626, 84)
			current_object_arr.force (-2147469626, 85)
			current_object_arr.force (-2147469626, 86)
			current_object_arr.force (-2147469626, 87)
			current_object_arr.force (-2147469626, 88)
			current_object_arr.force (-2147469626, 89)
			current_object_arr.force (-2147469626, 90)
			current_object_arr.force (-2147469626, 91)
			current_object_arr.force (-2147469626, 92)
			current_object_arr.force (-2147469626, 93)
			current_object_arr.force (-2147469626, 94)
			current_object_arr.force (-2147469626, 95)
			current_object_arr.force (-2147469626, 96)
			current_object_arr.force (-2147469626, 97)
			current_object_arr.force (-2147469626, 98)
			current_object_arr.force (-2147469626, 99)
			current_object_arr.force (-2147469626, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 93)
			key := -2147469626
			bn := 9
			is_contain_result := current_object.is_contain (key, bn)
		end

	test_QS_STACK_is_contain_2
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			key: INTEGER_32
			bn: INTEGER_32
			is_contain_result: BOOLEAN
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force ((-2147469626), 11)
			current_object_arr.force ((-2147469626), 12)
			current_object_arr.force ((-2147469626), 13)
			current_object_arr.force ((-2147469626), 14)
			current_object_arr.force ((-2147469626), 15)
			current_object_arr.force ((-2147469626), 16)
			current_object_arr.force ((-2147469626), 17)
			current_object_arr.force ((-2147469626), 18)
			current_object_arr.force ((-2147469626), 19)
			current_object_arr.force ((-2147469626), 20)
			current_object_arr.force ((-2147469626), 21)
			current_object_arr.force ((-2147469626), 22)
			current_object_arr.force ((-2147469626), 23)
			current_object_arr.force ((-2147469626), 24)
			current_object_arr.force ((-2147469626), 25)
			current_object_arr.force ((-2147469626), 26)
			current_object_arr.force ((-2147469626), 27)
			current_object_arr.force ((-2147469626), 28)
			current_object_arr.force ((-2147469626), 29)
			current_object_arr.force ((-2147469626), 30)
			current_object_arr.force ((-2147469626), 31)
			current_object_arr.force ((-2147469626), 32)
			current_object_arr.force ((-2147469626), 33)
			current_object_arr.force ((-2147469626), 34)
			current_object_arr.force ((-2147469626), 35)
			current_object_arr.force ((-2147469626), 36)
			current_object_arr.force ((-2147469626), 37)
			current_object_arr.force ((-2147469626), 38)
			current_object_arr.force ((-2147469626), 39)
			current_object_arr.force ((-2147469626), 40)
			current_object_arr.force ((-2147469626), 41)
			current_object_arr.force ((-2147469626), 42)
			current_object_arr.force ((-2147469626), 43)
			current_object_arr.force ((-2147469626), 44)
			current_object_arr.force ((-2147469626), 45)
			current_object_arr.force ((-2147469626), 46)
			current_object_arr.force ((-2147469626), 47)
			current_object_arr.force ((-2147469626), 48)
			current_object_arr.force ((-2147469626), 49)
			current_object_arr.force ((-2147469626), 50)
			current_object_arr.force ((-2147469626), 51)
			current_object_arr.force ((-2147469626), 52)
			current_object_arr.force ((-2147469626), 53)
			current_object_arr.force ((-2147469626), 54)
			current_object_arr.force ((-2147469626), 55)
			current_object_arr.force ((-2147469626), 56)
			current_object_arr.force ((-2147469626), 57)
			current_object_arr.force ((-2147469626), 58)
			current_object_arr.force ((-2147469626), 59)
			current_object_arr.force ((-2147469626), 60)
			current_object_arr.force ((-2147469626), 61)
			current_object_arr.force ((-2147469626), 62)
			current_object_arr.force ((-2147469626), 63)
			current_object_arr.force ((-2147469626), 64)
			current_object_arr.force ((-2147469626), 65)
			current_object_arr.force ((-2147469626), 66)
			current_object_arr.force ((-2147469626), 67)
			current_object_arr.force ((-2147469626), 68)
			current_object_arr.force ((-2147469626), 69)
			current_object_arr.force ((-2147469626), 70)
			current_object_arr.force ((-2147469626), 71)
			current_object_arr.force ((-2147469626), 72)
			current_object_arr.force ((-2147469626), 73)
			current_object_arr.force ((-2147469626), 74)
			current_object_arr.force ((-2147469626), 75)
			current_object_arr.force ((-2147469626), 76)
			current_object_arr.force ((-2147469626), 77)
			current_object_arr.force ((-2147469626), 78)
			current_object_arr.force ((-2147469626), 79)
			current_object_arr.force ((-2147469626), 80)
			current_object_arr.force ((-2147469626), 81)
			current_object_arr.force ((-2147469626), 82)
			current_object_arr.force ((-2147469626), 83)
			current_object_arr.force ((-2147469626), 84)
			current_object_arr.force ((-2147469626), 85)
			current_object_arr.force ((-2147469626), 86)
			current_object_arr.force ((-2147469626), 87)
			current_object_arr.force ((-2147469626), 88)
			current_object_arr.force ((-2147469626), 89)
			current_object_arr.force ((-2147469626), 90)
			current_object_arr.force ((-2147469626), 91)
			current_object_arr.force ((-2147469626), 92)
			current_object_arr.force ((-2147469626), 93)
			current_object_arr.force ((-2147469626), 94)
			current_object_arr.force ((-2147469626), 95)
			current_object_arr.force ((-2147469626), 96)
			current_object_arr.force ((-2147469626), 97)
			current_object_arr.force ((-2147469626), 98)
			current_object_arr.force ((-2147469626), 99)
			current_object_arr.force ((-2147469626), 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 96)
			key := -2147469627
			bn := 10
			is_contain_result := current_object.is_contain (key, bn)
		end

	test_QS_STACK_size_1
		local 
			current_object: QS_STACK
			current_object_arr: SIMPLE_ARRAY [INTEGER_32]
			bn: INTEGER_32
			size_result: INTEGER_32
		do
			create current_object.make (0)
			create current_object_arr.make_empty
			current_object_arr.force (0, 1)
			current_object_arr.force (0, 2)
			current_object_arr.force (0, 3)
			current_object_arr.force (0, 4)
			current_object_arr.force (0, 5)
			current_object_arr.force (0, 6)
			current_object_arr.force (0, 7)
			current_object_arr.force (0, 8)
			current_object_arr.force (0, 9)
			current_object_arr.force (0, 10)
			current_object_arr.force (0, 11)
			current_object_arr.force (0, 12)
			current_object_arr.force (0, 13)
			current_object_arr.force (0, 14)
			current_object_arr.force (0, 15)
			current_object_arr.force (0, 16)
			current_object_arr.force (0, 17)
			current_object_arr.force (0, 18)
			current_object_arr.force (0, 19)
			current_object_arr.force (0, 20)
			current_object_arr.force (0, 21)
			current_object_arr.force (0, 22)
			current_object_arr.force (0, 23)
			current_object_arr.force (0, 24)
			current_object_arr.force (0, 25)
			current_object_arr.force (0, 26)
			current_object_arr.force (0, 27)
			current_object_arr.force (0, 28)
			current_object_arr.force (0, 29)
			current_object_arr.force (0, 30)
			current_object_arr.force (0, 31)
			current_object_arr.force (0, 32)
			current_object_arr.force (0, 33)
			current_object_arr.force (0, 34)
			current_object_arr.force (0, 35)
			current_object_arr.force (0, 36)
			current_object_arr.force (0, 37)
			current_object_arr.force (0, 38)
			current_object_arr.force (0, 39)
			current_object_arr.force (0, 40)
			current_object_arr.force (0, 41)
			current_object_arr.force (0, 42)
			current_object_arr.force (0, 43)
			current_object_arr.force (0, 44)
			current_object_arr.force (0, 45)
			current_object_arr.force (0, 46)
			current_object_arr.force (0, 47)
			current_object_arr.force (0, 48)
			current_object_arr.force (0, 49)
			current_object_arr.force (0, 50)
			current_object_arr.force (0, 51)
			current_object_arr.force (0, 52)
			current_object_arr.force (0, 53)
			current_object_arr.force (0, 54)
			current_object_arr.force (0, 55)
			current_object_arr.force (0, 56)
			current_object_arr.force (0, 57)
			current_object_arr.force (0, 58)
			current_object_arr.force (0, 59)
			current_object_arr.force (0, 60)
			current_object_arr.force (0, 61)
			current_object_arr.force (0, 62)
			current_object_arr.force (0, 63)
			current_object_arr.force (0, 64)
			current_object_arr.force (0, 65)
			current_object_arr.force (0, 66)
			current_object_arr.force (0, 67)
			current_object_arr.force (0, 68)
			current_object_arr.force (0, 69)
			current_object_arr.force (0, 70)
			current_object_arr.force (0, 71)
			current_object_arr.force (0, 72)
			current_object_arr.force (0, 73)
			current_object_arr.force (0, 74)
			current_object_arr.force (0, 75)
			current_object_arr.force (0, 76)
			current_object_arr.force (0, 77)
			current_object_arr.force (0, 78)
			current_object_arr.force (0, 79)
			current_object_arr.force (0, 80)
			current_object_arr.force (0, 81)
			current_object_arr.force (0, 82)
			current_object_arr.force (0, 83)
			current_object_arr.force (0, 84)
			current_object_arr.force (0, 85)
			current_object_arr.force (0, 86)
			current_object_arr.force (0, 87)
			current_object_arr.force (0, 88)
			current_object_arr.force (0, 89)
			current_object_arr.force (0, 90)
			current_object_arr.force (0, 91)
			current_object_arr.force (0, 92)
			current_object_arr.force (0, 93)
			current_object_arr.force (0, 94)
			current_object_arr.force (0, 95)
			current_object_arr.force (0, 96)
			current_object_arr.force (0, 97)
			current_object_arr.force (0, 98)
			current_object_arr.force (0, 99)
			current_object_arr.force (0, 100)

			{P_INTERNAL}.set_reference_field_ ("arr", current_object, current_object_arr)
			{P_INTERNAL}.set_boolean_field_ ("exception_is_raised", current_object, false)
			{P_INTERNAL}.set_integer_32_field_ ("top", current_object, 85)
			bn := -2147481202
			size_result := current_object.size (bn)
		end

end
